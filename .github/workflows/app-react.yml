name: APP (React)

on:
  push:
    branches: [master, dev]
  pull_request:
    branches: [master, dev]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true
      working-directory: ./frontend
      codeCov-token: ${{ secrets.CodeCov }}
    strategy:
      matrix:
        node-version: [10.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
        working-directory: ${{env.working-directory}}
      - run: npm run build --if-present
        working-directory: ${{env.working-directory}}
      - run: npm run coverage
        working-directory: ${{env.working-directory}}
      - name: Codecov
        uses: codecov/codecov-action@v1.0.7
        with:
          # User defined upload name. Visible in Codecov UI
          name: PIMS
          # Repository upload token - get it from codecov.io. Required only for private repositories
          token: ${{env.codeCov-token}}
          # Path to coverage file to upload
          file: ${{env.working-directory}}/coverage/coverage-final.json
          # Flag upload to group coverage metrics (e.g. unittests | integration | ui,chrome)
          flags: unittests
          # Environment variables to tag the upload with (e.g. PYTHON | OS,PYTHON)
          env_vars: javascript
          # Specify whether or not CI build should fail if Codecov runs into an error during upload
          fail_ci_if_error: false

        #################################################
        ##       Steps below run only on PRs           ##
        #################################################
      - if: ${{ github.event_name == 'pull_request' }}
        name: Setup sonarqube
        uses: warchant/setup-sonar-scanner@v1
      - if: ${{ github.event_name == 'pull_request' }}
        name: Run sonar scan
        working-directory: ./openshift
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_URL: ${{ secrets.SONAR_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          OC_JOB_NAME: pr-${{ github.event.pull_request.number }}
          SKIP_OC_LOGIN: 1
        run: ./player.sh scan $OC_JOB_NAME -apply
      - if: ${{ github.event_name == 'pull_request' }}
        name: Find Comment
        uses: peter-evans/find-comment@v1.0.1
        id: fc
        with:
          token: ${{ secrets.PR_COMMENT_PAT }}
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: Frontend Sonar Scan Report
      - if: ${{ github.event_name == 'pull_request' }}
        name: Create or Update comment
        uses: peter-evans/create-or-update-comment@v1.4.2
        with:
          token: ${{ secrets.PR_COMMENT_PAT }}
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            ## Frontend Sonar Scan Report

            [![Quality gate](https://sonarqube-jcxjin-tools.pathfinder.gov.bc.ca/api/project_badges/quality_gate?project=pims-frontend-pr-${{ github.event.pull_request.number }})](https://sonarqube-jcxjin-tools.pathfinder.gov.bc.ca/dashboard?id=pims-frontend-pr-${{ github.event.pull_request.number }})

            #### Quality Metrics
            [![Bugs](https://sonarqube-jcxjin-tools.pathfinder.gov.bc.ca/api/project_badges/measure?project=pims-frontend-pr-${{ github.event.pull_request.number }}&metric=bugs)](https://sonarqube-jcxjin-tools.pathfinder.gov.bc.ca/dashboard?id=pims-frontend-pr-${{ github.event.pull_request.number }})
            [![Vulnerabilities](https://sonarqube-jcxjin-tools.pathfinder.gov.bc.ca/api/project_badges/measure?project=pims-frontend-pr-${{ github.event.pull_request.number }}&metric=vulnerabilities)](https://sonarqube-jcxjin-tools.pathfinder.gov.bc.ca/dashboard?id=pims-frontend-pr-${{ github.event.pull_request.number }})
            [![Code Smells](https://sonarqube-jcxjin-tools.pathfinder.gov.bc.ca/api/project_badges/measure?project=pims-frontend-pr-${{ github.event.pull_request.number }}&metric=code_smells)](https://sonarqube-jcxjin-tools.pathfinder.gov.bc.ca/dashboard?id=pims-frontend-pr-${{ github.event.pull_request.number }})
            [![Coverage](https://sonarqube-jcxjin-tools.pathfinder.gov.bc.ca/api/project_badges/measure?project=pims-frontend-pr-${{ github.event.pull_request.number }}&metric=coverage)](https://sonarqube-jcxjin-tools.pathfinder.gov.bc.ca/dashboard?id=pims-frontend-pr-${{ github.event.pull_request.number }})
